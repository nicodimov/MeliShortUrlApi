
spring.redis.host=redis
spring.redis.port=6379

server.port=8080
spring.application.name=MeliShortUrlApi
logging.level.org.springframework=INFO
logging.level.com.melishorturlapi=DEBUG

# URL shortening settings
url.shortening.base-url=http://localhost:8080/
url.shortening.expiration-time=30 # in days

# DynamoDB Local endpoint (from Docker network)
amazon.dynamodb.endpoint=http://host.docker.internal:8000
amazon.aws.accesskey=test
amazon.aws.secretkey=test
amazon.aws.region=us-west-2

# (Optional) Logging
logging.level.com.amazonaws=DEBUG

# TTL 
cache.caffeine.ttl=10
cache.redis.ttl=10

# Prometheus
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true

# OpenTelemetry (from Docker network)\
otel.exporter.otlp.protocol=grpc
otel.exporter.otlp.endpoint=http://otel-collector:4317
otel.metrics.exporter=otlp
otel.traces.exporter=otlp
otel.logs.exporter=otlp
otel.resource.attributes=service.name=MeliShortUrlApi


# Enable request logging
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=INFO
# Optionally, log request/response bodies (be careful with sensitive data)
spring.web.log-request-details=true

# Rate Limiting Configuration
rate.limit.enabled=false

resilience4j.circuitbreaker.instances.shortUrlService.slidingWindowSize=100
resilience4j.circuitbreaker.instances.shortUrlService.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.shortUrlService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.shortUrlService.waitDurationInOpenState=10s